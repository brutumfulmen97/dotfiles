// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "(Workspace || Editor) &&  vim_mode == normal",
    "bindings": {
      "alt-h": "workspace::ActivatePaneLeft",
      "alt-l": "workspace::ActivatePaneRight",
      "space space": "file_finder::Toggle",
      ";": "command_palette::Toggle"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "alt-h": "workspace::ActivatePaneLeft",
      "alt-l": "workspace::ActivatePaneRight"
    }
  },
  {
    "context": "(Workspace || Editor) &&  vim_mode == normal",
    "bindings": {
      "space e": "workspace::ToggleRightDock",
      "space E": "workspace::ToggleLeftDock",
      "ctrl-l": "assistant::InlineAssist"
    }
  },
  {
    "context": "(Workspace || Editor) &&  vim_mode == insert",
    "bindings": {
      "ctrl-s": "workspace::Save"
    }
  },
  {
    "context": "(Workspace || Editor) && (vim_mode == insert)",
    "bindings": {
      "j j": "vim::SwitchToNormalMode"
    }
  },
  {
    "bindings": {
      "ctrl-enter": "vim::InsertLineBelow",
      "ctrl-shift-enter": "vim::InsertLineAbove",
      "ctrl-shift-r": "projects::OpenRecent",
      "ctrl-m ctrl-o": "workspace::Open"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "alt-k": "editor::MoveLineUp",
      "alt-j": "editor::MoveLineDown"
    }
  },
  {
    "context": "vim_mode == normal",
    "bindings": {
      "space h": "pane::SplitLeft",
      "space l": "pane::SplitRight",
      "shift-q": "pane::CloseActiveItem"
    }
  },
  {
    "context": "vim_mode == visual || vim_mode == normal",
    "bindings": {
      "k": "vim::Up"
    }
  },
  {
    "context": "Editor && edit_prediction",
    "bindings": {
      "alt-l": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "tab": "editor::Tab"
    }
  },
  {
    "context": "Editor && showing_completions",
    "bindings": {
      "tab": "editor::ComposeCompletion"
    }
  },
  {
    "context": "(VimControl && !menu) || vim_mode == replace || vim_mode == waiting",
    "bindings": {
      "tab": "vim::Tab"
    }
  },
  {
    "context": "vim_mode == literal",
    "bindings": {
      "tab": ["vim::Literal", ["tab", "\u0009"]]
    }
  }
]
